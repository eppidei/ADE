#ifndef _ADE_ERRORS_H
#define _ADE_ERRORS_H
#include "headers/ADE_typedefs.h"

static ADE_Error_Handler_T ade_error_handler;

#define ADE_PRINT_ERRORS(sev,type,class,met,var,format,stream)  ADE_Error_Handler_SetError(sev,type,class,met,format,&(var),#var,(FILE*)stream)

/*************************** ERROR DEFINES ***************************/
#define ADE_MISSING_IMPLEMENTATION(fcn_name) fprintf(stderr," MISSING IMPLEMENTATION IN fcn ->  " #fcn_name " \n");

#define ADE_NBITS_SEVERITY (8)
#define ADE_NBITS_TYPE (8)
#define ADE_NBITS_CLASS (8)
#define ADE_NBITS_METHOD (8)

#define ADE_NBITS_METHOD_SHIFT (0)
#define ADE_NBITS_CLASS_SHIFT (ADE_NBITS_METHOD+ADE_NBITS_METHOD_SHIFT)
#define ADE_NBITS_TYPE_SHIFT (ADE_NBITS_CLASS+ADE_NBITS_CLASS_SHIFT)
#define ADE_NBITS_SEVERITY_SHIFT (ADE_NBITS_TYPE+ADE_NBITS_TYPE_SHIFT)

/************************** SEVERITY ************************************/
#define ERRSEVERITY \
X_ERRSEVERITY(ADE_ERROR) \
X_ERRSEVERITY(ADE_WARNING)

#define X_ERRSEVERITY(a) a,
typedef enum  { ERRSEVERITY } ADE_ERRSEVERITY_T;
#undef X_ERRSEVERITY

#define X_ERRSEVERITY(a) #a,
static char *ADE_ERRSEVERITYStrings[] = { ERRSEVERITY };
#undef X_ERRSEVERITY

/*************************** ERROR TYPES ***************************/

#define ERRTYPE \
X_ERRTYPE(ADE_INCHECKS) \
X_ERRTYPE(ADE_MEM) \
X_ERRTYPE(ADE_RETCHECKS)

#define X_ERRTYPE(a) a,
typedef enum  { ERRTYPE } ADE_ERRTYPE_T;
#undef X_ERRTYPE

#define X_ERRTYPE(a) #a,
static char *ADE_ERRTYPEStrings[] = { ERRTYPE };
#undef X_ERRTYPE


/*******************************ERROR  CLASSES **************************/
#define ERRCLASS \
X_ERRCLASS(ADE_CLASS_BLAS_LEVEL1) \
X_ERRCLASS(ADE_CLASS_IIR) \
X_ERRCLASS(ADE_CLASS_FIR) \
X_ERRCLASS(ADE_CLASS_BLOW) \
X_ERRCLASS(ADE_CLASS_POLYFIT) \
X_ERRCLASS(ADE_CLASS_ADE) \
X_ERRCLASS(ADE_CLASS_MATLAB) \
X_ERRCLASS(ADE_CLASS_FFT) \
X_ERRCLASS(ADE_CLASS_UTILS) \
X_ERRCLASS(ADE_CLASS_BLAS_LEVEL2) \
X_ERRCLASS(ADE_CLASS_BLAS_LEVEL3) \
X_ERRCLASS(ADE_CLASS_SNAP) \
X_ERRCLASS(ADE_CLASS_UPSAMPLER) \
X_ERRCLASS(ADE_CLASS_COMPLEX)

#define X_ERRCLASS(a) a,
typedef enum  { ERRCLASS } ADE_ERRCLASS_T;
#undef X_ERRCLASS

#define X_ERRCLASS(a) #a,
static char *ADE_ERRCLASSStrings[] = { ERRCLASS };
#undef X_ERRCLASS

/******************ERROR METHODS********************/

#define ERRMETHODS \
X_ERRMETHODS(Init) \
X_ERRMETHODS(Release) \
X_ERRMETHODS(Step) \
X_ERRMETHODS(SetA) \
X_ERRMETHODS(SetB) \
X_ERRMETHODS(SetC) \
X_ERRMETHODS(SetS) \
X_ERRMETHODS(SetD1) \
X_ERRMETHODS(SetD2) \
X_ERRMETHODS(SetALPHA) \
X_ERRMETHODS(SetN) \
X_ERRMETHODS(SetINCX) \
X_ERRMETHODS(SetINCY) \
X_ERRMETHODS(SetX) \
X_ERRMETHODS(SetY) \
X_ERRMETHODS(SetPARAM) \
X_ERRMETHODS(axpy) \
X_ERRMETHODS(Print) \
X_ERRMETHODS(copy) \
X_ERRMETHODS(dot) \
X_ERRMETHODS(dotc) \
X_ERRMETHODS(dotu) \
X_ERRMETHODS(nrm2) \
X_ERRMETHODS(csum) \
X_ERRMETHODS(cset) \
X_ERRMETHODS(cdiff) \
X_ERRMETHODS(cmult) \
X_ERRMETHODS(creal) \
X_ERRMETHODS(cimag) \
X_ERRMETHODS(cabs) \
X_ERRMETHODS(setNum) \
X_ERRMETHODS(ResetState) \
X_ERRMETHODS(SetInBuff) \
X_ERRMETHODS(SetOutBuff) \
X_ERRMETHODS(setNums) \
X_ERRMETHODS(setGains) \
X_ERRMETHODS(setDenoms) \
X_ERRMETHODS(GetVarIndex) \
X_ERRMETHODS(GetNRows) \
X_ERRMETHODS(GetNCols) \
X_ERRMETHODS(GetSize) \
X_ERRMETHODS(GetNElements) \
X_ERRMETHODS(GetDataPointer) \
X_ERRMETHODS(PutVarintoWorkspace) \
X_ERRMETHODS(Evaluate_String) \
X_ERRMETHODS(C2Mat_copy) \
X_ERRMETHODS(Evaluate_StringnWait) \
X_ERRMETHODS(Configure_Iir_sos) \
X_ERRMETHODS(GetScalar) \
X_ERRMETHODS(launch_script_segment) \
X_ERRMETHODS(GetLength) \
X_ERRMETHODS(SetBreaks) \
X_ERRMETHODS(memoryless_expander) \
X_ERRMETHODS(SetCoeffs) \
X_ERRMETHODS(Get_Terminal_size) \
X_ERRMETHODS(PrintArray) \
X_ERRMETHODS(FindIndexes) \
X_ERRMETHODS(Complex2Split) \
X_ERRMETHODS(Split2Complex) \
X_ERRMETHODS(SetSplit) \
X_ERRMETHODS(FillSplitReal) \
X_ERRMETHODS(FillSplitImag) \
X_ERRMETHODS(FillSplitCplx) \
X_ERRMETHODS(memset_float) \
X_ERRMETHODS(memset_cplx) \
X_ERRMETHODS(memcpy_float) \
X_ERRMETHODS(memcpy_cplx) \
X_ERRMETHODS(indexx) \
X_ERRMETHODS(indexx_descend) \
X_ERRMETHODS(setFilt_Implementation) \
X_ERRMETHODS(memset_blasconfig) \
X_ERRMETHODS(memcpy_blasconfig) \
X_ERRMETHODS(PrintRowArrayReal) \
X_ERRMETHODS(PrintRowArrayCplx) \
X_ERRMETHODS(PrintColArrayReal) \
X_ERRMETHODS(PrintColArrayCplax) \
X_ERRMETHODS(PrintRowArray) \
X_ERRMETHODS(PrintColArray) \
X_ERRMETHODS(PrintMatrix) \
X_ERRMETHODS(Upsampler_Pure) \
X_ERRMETHODS(Upsampler_doPure_blas) \
X_ERRMETHODS(Upsampler_doPure_custom) \
X_ERRMETHODS(SetUplo) \
X_ERRMETHODS(SetTrans) \
X_ERRMETHODS(SetDiag) \
X_ERRMETHODS(SetM) \
X_ERRMETHODS(SetK) \
X_ERRMETHODS(SetKl) \
X_ERRMETHODS(SetKU) \
X_ERRMETHODS(SetLda) \
X_ERRMETHODS(SetBeta) \
X_ERRMETHODS(Elewise_Config) \
X_ERRMETHODS(ger) \
X_ERRMETHODS(sbmv) \
X_ERRMETHODS(Elewise) \
X_ERRMETHODS(launch_type1) \
X_ERRMETHODS(Saturation_detector_sm) \
X_ERRMETHODS(doSaturation_detector_sm) \
X_ERRMETHODS(Fir_Config) \
X_ERRMETHODS(Configure) \
X_ERRMETHODS(SetDirection) \
X_ERRMETHODS(SetType) \
X_ERRMETHODS(SetPlan) \
X_ERRMETHODS(SetTransA) \
X_ERRMETHODS(SetTransB) \
X_ERRMETHODS(SetSide) \
X_ERRMETHODS(SetLdb) \
X_ERRMETHODS(SetLdc) \
X_ERRMETHODS(gemm) \
X_ERRMETHODS(TeagerKaiser) \
X_ERRMETHODS(ThresholdDetection) \
X_ERRMETHODS(extract_events)





#define X_ERRMETHODS(a) a,
typedef enum { ERRMETHODS } ADE_ERRMETHODS_T;
#undef X_ERRMETHODS

#define X_ERRMETHODS(a) #a,
static char *ADE_ERRMETHODSStrings[] = { ERRMETHODS };
#undef X_ERRMETHODS


///*****************************ERROR BLAS  CODES **********************/
///*Level1*/
//#define ADE_W0 (ADE_WARNING_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL1<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_SAXPY_N<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_W1 (ADE_WARNING_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL1<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_SAXPY_SA<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//2 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL1<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//36 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL1<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//39 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL1<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///*Level2*/
//#define ADE_RET_ERROR;//37 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL2<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//38 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL2<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//40 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL2<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///*Level3*/
//#define ADE_RET_ERROR;//41 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL3<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//42 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL3<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//43 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLAS_LEVEL3<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///******************************* ERRORS IIR **************************************/
//#define ADE_RET_ERROR;//3 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//4 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//5 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//6 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_DENOMS<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//7 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_NUMS<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//8 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_GAINS<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//15 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_STATES<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//10 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_IN_BUFF<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//11 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_IIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_OUT_BUFF<<ADE_NBITS_METHOD_SHIFT)
///******************************* ERRORS FIR **************************************/
////#define ADE_RET_ERROR;//9 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FIR<<ADE_NBITS_CLASS_SHIFT | ADE_FILT_IMPLEMENTATION_NOT_EXISTENT<<ADE_NBITS_METHOD_SHIFT)
////#define ADE_RET_ERROR;//12 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FIR<<ADE_NBITS_CLASS_SHIFT | ADE_MISSING_IN_BUFF<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//13 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FIR<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//14 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FIR<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//17 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FIR<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
///********************************* ERRORS BLOW *************************************/
//#define ADE_RET_ERROR;//16 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLOW<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//18 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLOW<<ADE_NBITS_CLASS_SHIFT | ADE_MEMBER_NOT_SET<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//19 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLOW<<ADE_NBITS_CLASS_SHIFT | ADE_UNKNOWN_STATE<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//20 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLOW<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//25 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_BLOW<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///*********************************** ERRORS POLYFIT ************************************/
//#define ADE_RET_ERROR;//21 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_POLYFIT<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//22 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_POLYFIT<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
///*********************************** ERRORS ADE ************************************/
//#define ADE_RET_ERROR;//23 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_ADE<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//24 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_ADE<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///*********************************** ERRORS MATLAB ************************************/
//#define ADE_RET_ERROR;//26 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_MATLAB<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//27 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_MATLAB<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//28 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_MATLAB<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//29 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_MATLAB<<ADE_NBITS_CLASS_SHIFT | ADE_IDX_NOT_FOUND<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_W30 (ADE_WARNING_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_MATLAB<<ADE_NBITS_CLASS_SHIFT | ADE_CASE_NOT_HANDLED<<ADE_NBITS_METHOD_SHIFT)
///**************************************** ERRORS FFT *************************************************************/
//#define ADE_RET_ERROR;//31 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FFT<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//32 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FFT<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//33 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_FFT<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///****************************************** ERRORS UTILS **************************************************************/
//#define ADE_RET_ERROR;//34 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_UTILS<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//35 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_UTILS<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
///********************************************** SNAP ************************************************/
//#define ADE_RET_ERROR;//44 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_SNAP<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//45 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_SNAP<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//46 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_SNAP<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)
///********************************************** UPSAMPLER ************************************************/
//#define ADE_RET_ERROR;//47 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_UPSAMPLER<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR;//RROR_ALLOCATION<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//48 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_UPSAMPLER<<ADE_NBITS_CLASS_SHIFT | ADE_RET_ERROR<<ADE_NBITS_METHOD_SHIFT)
//#define ADE_RET_ERROR;//49 (ADE_RET_ERROR;//RROR_SIGN<<ADE_NBITS_SIGN_SHIFT | ADE_FRAMEWORK_ADE<<ADE_NBITS_FRAMEWORK_SHIFT | ADE_CLASS_UPSAMPLER<<ADE_NBITS_CLASS_SHIFT | ADE_INVALID_PARAM<<ADE_NBITS_METHOD_SHIFT)

#endif
